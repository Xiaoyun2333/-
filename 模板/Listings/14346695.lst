C51 COMPILER V9.60.0.0   14346695                                                          04/07/2023 20:16:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 14346695
OBJECT MODULE PLACED IN .\Objects\14346695.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 14346695.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -14346695.lst) TABS(2) OBJECT(.\Objects\14346695.obj)

line level    source

   1          #include<STC15.H>
   2          #include<base.h>
   3          #include<ds1302.h>
   4          #include<iic.h>
   5          #include<STDIO.H>
   6          #include<onewire.h>
   7          #include<uart.h>
   8          #include<INTRINS.H>
   9          
  10          unsigned char smg_buf[] = {10,10,10,10,10,10,10,10};
  11          unsigned char led_buf[] = {0,0,0,0,0,0,0,0};
  12          unsigned char dot[] = {0,0,0,0,0,0,0,0};
  13          unsigned char uart_recv[10];
  14          unsigned char uart_index = 0;
  15          unsigned char uart_send[10];
  16          
  17          unsigned char key_val,key_down,key_up,key_old,key_val_real;
  18          static unsigned char key_up_time = 0;
  19          static unsigned char key_down_time = 0;
  20          
  21          unsigned char key_count = 0;
  22          unsigned char smg_count = 0;
  23          unsigned char uart_count = 0;
  24          unsigned char pos_count = 0;
  25          unsigned char ms1_count = 0;
  26          unsigned int ne555_count = 0;
  27          
  28          unsigned int ne555_f = 0;
  29          
  30          // float temper = 0;
  31          
  32          void key_proc();
  33          void smg_proc();
  34          void led_proc();
  35          void uart_proc();
  36          void other_proc();
  37          
  38          void timer0_init();
  39          void timer0_service();
  40          
  41          void uart_service();
  42          
  43          void main()
  44          {
  45   1          init();
  46   1          // temper_read();
  47   1          // Delay750us();
  48   1          timer0_init();
  49   1          uart_init();
  50   1          while(1)
  51   1          {
  52   2              key_proc();
  53   2              smg_proc();
  54   2              led_proc();
C51 COMPILER V9.60.0.0   14346695                                                          04/07/2023 20:16:52 PAGE 2   

  55   2              uart_proc();
  56   2              other_proc();
  57   2          }   
  58   1      }
  59          void timer0_init()
  60          {
  61   1          AUXR |= 0x80;     //定时器时钟1T模式
  62   1        TMOD &= 0xF0;     //设置定时器模式
  63   1        TL0 = 0x20;       //设置定时初始值
  64   1        TH0 = 0xD1;       //设置定时初始值
  65   1        TF0 = 0;        //清除TF0标志
  66   1        TR0 = 1;        //定时器0开始计时
  67   1      
  68   1          ET0 = 1;
  69   1          EA = 1;
  70   1      }
  71          // void timer0_init()
  72          // {
  73          //     AUXR |= 0x80;      //定时器时钟1T模式
  74          //  TMOD &= 0xF0;
  75          //     TMOD |= 0x05;
  76          
  77          //     TL0 = 0x00;        
  78          //  TH0 = 0x00;       
  79          //  TF0 = 0;        
  80          //  TR0 = 1;
  81          // }//ne555模式
  82          void timer0_service() interrupt 1
  83          {
  84   1          if(++key_count == 10) key_count = 0;
  85   1          if(++smg_count == 500) smg_count = 0;
  86   1          if(++uart_count == 200) uart_count = 0;
  87   1          if(++pos_count == 8) pos_count = 0;
  88   1      
  89   1          ms1_count++;
  90   1      
  91   1          // if(++ne555_count == 1000)
  92   1          // {
  93   1          //     TR0 = 0;
  94   1          //     ne555_f = TH0 << 8 | TL0;
  95   1          //     ne555_count = 0;
  96   1          //     TR0 = 1;
  97   1          // }
  98   1      
  99   1          smg_show(pos_count,smg_buf[pos_count],dot[pos_count]);
 100   1          led_show(pos_count,led_buf[pos_count]);
 101   1      }
 102          void uart_service() interrupt 4
 103          {
 104   1          if((RI == 1) && (uart_index < 10))
 105   1          {
 106   2              uart_recv[uart_index] = SBUF;
 107   2              uart_index++;
 108   2              RI = 0;
 109   2          }
 110   1      }
 111          void key_proc()
 112          {
 113   1          if(key_count) return;
 114   1          key_count = 1;
 115   1      
 116   1          key_val = key_read();
C51 COMPILER V9.60.0.0   14346695                                                          04/07/2023 20:16:52 PAGE 3   

 117   1          key_down = key_val & (key_val ^ key_old);
 118   1          key_up = ~key_val & (key_val ^ key_old);
 119   1          key_old = key_val;
 120   1          if(!key_val) key_val_real = 0;
 121   1      
 122   1          if(key_down) key_down_time = ms1_count;
 123   1          if(key_up_time) key_up_time = ms1_count;
 124   1      }
 125          void smg_proc()
 126          {
 127   1          if(smg_count) return;
 128   1          smg_count = 1;
 129   1      }
 130          void led_proc()
 131          {
 132   1      
 133   1      }
 134          void uart_proc()
 135          {
 136   1          if(uart_count) return;
 137   1          uart_count = 1;
 138   1      
 139   1          if(uart_index)
 140   1          {
 141   2              uart_index = 0;
 142   2          }
 143   1      }
 144          void other_proc()
 145          {
 146   1      
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    306    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     61    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
