C51 COMPILER V9.60.0.0   MAIN                                                              03/01/2023 20:02:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<stc15.h>
   2          #include<absacc.h>
   3          #include<intrins.h>
   4          
   5          #include<onewire.h>
   6          //---------------------------------------------------------------------------
   7          unsigned char tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};//0~9，"-"为0xbf
   8          unsigned char dspbuf[] = {255,255,255,255,255,255,255,255};//显示缓冲
   9          
  10          sbit s7 = P3^0;
  11          sbit s6 = P3^1;
  12          sbit s5 = P3^2;
  13          sbit s4 = P3^3;//按键
  14          sbit pwm = P3^4;//pwm输出
  15          
  16          bit pwm_s = 0;//输出状态，0停止输出
  17          unsigned char pwm_value = 2;//睡眠风20，自然风为30，常风为70
  18          
  19          unsigned int temp = 25;//温度参数
  20          
  21          unsigned char s = 0;//工作时间
  22          unsigned char count_pwm = 0;//pwm计数
  23          unsigned char count_timer0 = 0;//定时器计数
  24          unsigned char count_10ms = 0;//10毫秒计数
  25          
  26          unsigned char cs = 0x00;
  27          unsigned char ns = 0x00;
  28          bit ts = 0;//温度显示状态，0为关闭，1为显示
  29          /*
  30          0x_0睡眠风状态  0x_1自然风状态  0x_2常风状态 
  31          0x0_剩于时间为0 0x1_剩于时间为1 0x2_剩于时间为2
  32          */
  33          //-----------------------------初始化-----------------------------
  34          void cls();//关闭蜂鸣器、led等设备
  35          //-----------------------------定时器-----------------------------
  36          void Timer0Init();//定时器0 16位自动重载 100us中断
  37          void timer0_service();//定时器0 中断服务函数
  38          //-----------------------------数码管-----------------------------
  39          void smg_show_bit(unsigned pos, unsigned dat);//数码管显示一位
  40          void smg_show_all(unsigned dat);//数码管全部显示
  41          void smg_show();//数码管动态显示
  42          void buf_set_time();//时间显示设置
  43          void buf_set_mode(unsigned mode);//模式显示设置
  44          void buf_set_temp();//温度显示设置
  45          void Delay1ms();//动态扫描1ms延时
  46          //-----------------------------温传感-----------------------------
  47          void rd_temperature(void);//传递温度
  48          void delay(unsigned int i);//传递延时
  49          //-----------------------------状态机-----------------------------
  50          void statemachine();//状态机
  51          //----------------------------------------------------------------
  52          void main()
  53          {
  54   1        cls();//关闭蜂鸣器、led等设备
C51 COMPILER V9.60.0.0   MAIN                                                              03/01/2023 20:02:30 PAGE 2   

  55   1        pwm = 0;
  56   1        rd_temperature();
  57   1        Timer0Init();
  58   1        XBYTE[0x8000] = 0xfe;
  59   1        while(1)
  60   1        {
  61   2          statemachine();//状态机
  62   2        }
  63   1      }
  64          //-------------------------------初始化----------------------------
  65          void cls()
  66          {
  67   1        XBYTE[0x8000] = 0xff;
  68   1        XBYTE[0xa000] = 0x00;
  69   1      }
  70          //-------------------------------定时器-----------------------------
  71          void Timer0Init()//定时器0 16位自动重载
  72          {
  73   1        AUXR |= 0x80;   //定时器时钟1T模式
  74   1        TMOD &= 0xF0;   //设置定时器模式
  75   1        TL0 = 0xAE;   //设置定时初始值
  76   1        TH0 = 0xFB;   //设置定时初始值
  77   1        TF0 = 0;    //清除TF0标志
  78   1        TR0 = 1;    //定时器0开始计时
  79   1        
  80   1        ET0 = 1;
  81   1        EA = 1;
  82   1      } 
  83          void timer0_service() interrupt 1 //定时器0 中断服务函数
  84          {
  85   1        count_timer0++;
  86   1        if(s == 0){pwm_s = 0; count_timer0 = 0;}
  87   1        else
  88   1        {
  89   2          pwm_s = 1;
  90   2          count_pwm++;
  91   2          if(count_timer0 == 100){count_10ms++; count_timer0 = 0;}
  92   2          if(count_10ms == 100){s--; count_10ms = 0;}
  93   2          if(count_pwm <= pwm_value){pwm = 1;}
  94   2          else if(count_pwm < 10){pwm = 0;}
  95   2          else if(count_pwm == 10){count_pwm = 0;}
  96   2        }
  97   1        
  98   1      }
  99          //-------------------------------数码管----------------------------
 100          void smg_show_bit(unsigned pos, unsigned dat)//数码管显示一位
 101          {
 102   1        XBYTE[0xe000] = 0xff;
 103   1        XBYTE[0xc000] = 0x01 << pos;
 104   1        XBYTE[0xe000] = dat;
 105   1        Delay1ms();
 106   1      }
 107          void smg_show_all(unsigned dat)//数码管全部显示
 108          {
 109   1        XBYTE[0xe000] = 0xff;
 110   1        XBYTE[0xc000] = 0xff;
 111   1        XBYTE[0xe000] = dat;
 112   1      }
 113          void smg_show()//数码管动态显示
 114          {
 115   1        unsigned char i;
 116   1        for(i = 0; i < 8; i++)
C51 COMPILER V9.60.0.0   MAIN                                                              03/01/2023 20:02:30 PAGE 3   

 117   1        {
 118   2          smg_show_bit(i, dspbuf[i]);
 119   2          Delay1ms();
 120   2        }
 121   1        smg_show_all(0xff);
 122   1      }
 123          void buf_set_time()//时间显示设置
 124          {
 125   1        dspbuf[4] = 0xff;
 126   1        dspbuf[5] = tab[s/ 100];
 127   1        dspbuf[6] = tab[(s / 10) % 10];
 128   1        dspbuf[7] = tab[s % 10];
 129   1      }
 130          void buf_set_temp()//温度显示设置
 131          {
 132   1        dspbuf[4] = 0xff;
 133   1        dspbuf[5] = tab[temp / 10];
 134   1        dspbuf[6] = tab[temp % 10];
 135   1        dspbuf[7] = 0xc6;
 136   1      }
 137          void buf_set_mode(unsigned mode)//模式显示设置
 138          {
 139   1        dspbuf[0] = 0xbf;
 140   1        dspbuf[1] = tab[mode];
 141   1        dspbuf[2] = 0xbf;
 142   1        dspbuf[3] = 0xff;
 143   1      }
 144          void Delay1ms()//@11.0592MHz
 145          {
 146   1        unsigned char i, j;
 147   1      
 148   1        _nop_();
 149   1        _nop_();
 150   1        _nop_();
 151   1        i = 11;
 152   1        j = 190;
 153   1        do
 154   1        {
 155   2          while (--j);
 156   2        } while (--i);
 157   1      }
 158          //-------------------------------温传感-------------------------------
 159          void rd_temperature(void)//传递温度
 160          {
 161   1        unsigned char lsb,msb;
 162   1        init_ds18b20();
 163   1        Write_DS18B20(0xcc);
 164   1        Write_DS18B20(0x44);
 165   1        
 166   1        delay(10);
 167   1        
 168   1        init_ds18b20();
 169   1        Write_DS18B20(0xcc);
 170   1        Write_DS18B20(0xbe);
 171   1        
 172   1        lsb = Read_DS18B20();
 173   1        msb = Read_DS18B20();
 174   1        
 175   1        temp = msb;
 176   1        temp = (temp << 8) | lsb;
 177   1        temp >>= 4;
 178   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              03/01/2023 20:02:30 PAGE 4   

 179          void delay(unsigned int i)//传递延时
 180          {
 181   1        while(--i)
 182   1        {
 183   2          smg_show();
 184   2        }
 185   1      }
 186          //-------------------------------状态机-------------------------------
 187          void statemachine()//状态机
 188          {
 189   1        cs = ns;
 190   1        switch((cs & 0x0f))
 191   1        {
 192   2          case 0x00:
 193   2            if(s4 == 0){smg_show();if(s4 == 0){while(s4 == 0){smg_show();};} ns = cs + 1; pwm_value = 3; XBYTE[0x80
             -00] = 0xfd;}
 194   2            if(s7 == 0){smg_show();if(s7 == 0){while(s7 == 0){smg_show();};} ts = ~ts;}
 195   2          break;
 196   2          case 0x01:
 197   2            if(s4 == 0){smg_show();if(s4 == 0){while(s4 == 0){smg_show();};} ns = cs + 1; pwm_value = 7; XBYTE[0x80
             -00] = 0xfb;}
 198   2            if(s7 == 0){smg_show();if(s7 == 0){while(s7 == 0){smg_show();};} ts = ~ts;} 
 199   2          break;
 200   2          case 0x02:
 201   2            if(s4 == 0){smg_show();if(s4 == 0){while(s4 == 0){smg_show();};} ns = cs - 2; pwm_value = 2; XBYTE[0x80
             -00] = 0xfe;}
 202   2            if(s7 == 0){smg_show();if(s7 == 0){while(s7 == 0){smg_show();};} ts = ~ts;}
 203   2          break;  
 204   2        }
 205   1        switch((cs & 0xf0))
 206   1        {
 207   2          case 0x00:
 208   2            if(s5 == 0){smg_show();if(s5 == 0){while(s5 == 0){smg_show();};} ns = cs + 16; s = 60;}
 209   2            if(s6 == 0){smg_show();if(s6 == 0){while(s6 == 0){smg_show();};} ns = cs & 0x0f; s = 0; pwm = 0;}
 210   2          break;
 211   2          case 0x10:
 212   2            if(s5 == 0){smg_show();if(s5 == 0){while(s5 == 0){smg_show();};} ns = cs + 16; s = 120;}
 213   2            if(s6 == 0){smg_show();if(s6 == 0){while(s6 == 0){smg_show();};} ns = cs & 0x0f; s = 0; pwm = 0;}
 214   2          break;
 215   2          case 0x20:
 216   2            if(s5 == 0){smg_show();if(s5 == 0){while(s5 == 0){smg_show();};} ns = cs - 32; s = 0; pwm = 0;}
 217   2            if(s6 == 0){smg_show();if(s6 == 0){while(s6 == 0){smg_show();};} ns = cs & 0x0f; s = 0; pwm = 0;}
 218   2          break;  
 219   2        }
 220   1        if(ts == 1){buf_set_mode(4);buf_set_temp();rd_temperature();}
 221   1        else if((cs & 0x0f) == 0x00){buf_set_mode(1);buf_set_time();}
 222   1        else if((cs & 0x0f) == 0x01){buf_set_mode(2);buf_set_time();}
 223   1        else if((cs & 0x0f) == 0x02){buf_set_mode(3);buf_set_time();}
 224   1        smg_show();;
 225   1      }
 226          //


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    852    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   MAIN                                                              03/01/2023 20:02:30 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
