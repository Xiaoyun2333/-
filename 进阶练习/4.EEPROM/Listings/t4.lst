C51 COMPILER V9.60.0.0   T4                                                                03/16/2023 13:14:10 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE T4
OBJECT MODULE PLACED IN .\Objects\t4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE t4.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\t4.lst
                    -) TABS(2) OBJECT(.\Objects\t4.obj)

line level    source

   1          #include<stc15.h>
   2          #include<intrins.h>
   3          #include<absacc.h>
   4          
   5          #include<iic.h>
   6          
   7          unsigned char tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
   8          unsigned char dspbuf[] = {255, 255, 255, 255, 255, 255, 255, 255};
   9          unsigned char eeprom;
  10          
  11          void cls();
  12          unsigned char ad_read(unsigned char addr);
  13          void da_wirte(unsigned char addr);
  14          void smg_show_bit(unsigned pos, unsigned dat);//数码管显示一位
  15          void smg_show_all(unsigned dat);//数码管全部显示
  16          void smg_show();//数码管动态显示
  17          void buf_set();//设置数码管
  18          void Delay1ms();
  19          
  20          void eeprom_write(unsigned char addr, unsigned char dat);
  21          unsigned char eeprom_read(unsigned char addr);
  22          
  23          void main()
  24          {
  25   1          cls();
  26   1          eeprom = eeprom_read(0x01);
  27   1          eeprom++;
  28   1          eeprom_write(0x01,eeprom);
  29   1          buf_set();
  30   1          while(1)
  31   1          {
  32   2              smg_show();
  33   2          }
  34   1      }
  35          void cls()
  36          {
  37   1        XBYTE[0x8000] = 0xff;
  38   1          XBYTE[0xa000] = 0x00;
  39   1      }
  40          void smg_show_bit(unsigned pos, unsigned dat)
  41          {
  42   1          XBYTE[0xe000] = 0xff;
  43   1          XBYTE[0xc000] = 0x01 << pos;
  44   1          XBYTE[0xe000] = dat;
  45   1          Delay1ms();
  46   1      }
  47          void smg_show_all(unsigned dat)
  48          {
  49   1          XBYTE[0xe000] = 0xff;
  50   1          XBYTE[0xc000] = 0xff;
  51   1          XBYTE[0xe000] = dat;
  52   1      }
  53          void smg_show()
  54          {
C51 COMPILER V9.60.0.0   T4                                                                03/16/2023 13:14:10 PAGE 2   

  55   1          unsigned char i;
  56   1          for(i = 0; i < 8; i++)
  57   1          {
  58   2              smg_show_bit(i, dspbuf[i]);
  59   2              Delay1ms();
  60   2          }
  61   1          smg_show_all(0xff);
  62   1      }
  63          void Delay1ms()//@11.0592MHz
  64          {
  65   1        unsigned char i, j;
  66   1      
  67   1        _nop_();
  68   1        _nop_();
  69   1        _nop_();
  70   1        i = 11;
  71   1        j = 190;
  72   1        do
  73   1        {
  74   2          while (--j);
  75   2        } while (--i);
  76   1      }
  77          void buf_set()
  78          {
  79   1          dspbuf[5] = tab[(eeprom/ 100) % 10];
  80   1          dspbuf[6] = tab[(eeprom / 10) % 10];
  81   1          dspbuf[7] = tab[eeprom % 10];
  82   1      }
  83          
  84          void eeprom_write(unsigned char addr, unsigned char dat)
  85          {
  86   1          IIC_Start();
  87   1          IIC_SendByte(0xA0);
  88   1          IIC_WaitAck();
  89   1          IIC_SendByte(addr);
  90   1          IIC_WaitAck();
  91   1          IIC_SendByte(dat);
  92   1          IIC_WaitAck();
  93   1          IIC_Stop();
  94   1      
  95   1      }
  96          unsigned char eeprom_read(unsigned char addr)
  97          {
  98   1          unsigned char temp;
  99   1          IIC_Start();
 100   1          IIC_SendByte(0xA0);
 101   1          IIC_WaitAck();
 102   1          IIC_SendByte(addr);
 103   1          IIC_WaitAck();
 104   1      
 105   1          IIC_Start();
 106   1          IIC_SendByte(0xA1);
 107   1          IIC_WaitAck();
 108   1          temp = IIC_RecByte();
 109   1          IIC_SendAck(1);
 110   1          IIC_Stop();
 111   1          return temp;
 112   1      
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   T4                                                                03/16/2023 13:14:10 PAGE 3   

   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
